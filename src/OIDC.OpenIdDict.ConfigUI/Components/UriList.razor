<div>
    <div class="input-group">
        <input type="text" class="form-control" @bind-value="@NewValue" />
        <button class="btn btn-success" @onclick="() => AddNewValue()"><i class="fa fa-fw fa-plus"></i></button>
    </div>

    <div class="mt-3">
        @foreach (var item in (ShowAllItems ? Items : Items.Take(3)).OrderBy(x => x.ToString()))
        {
            <div>
                <span class="badge badge-hover text-bg-secondary me-2 mb-2  p-2">
                    @item
                    <i class="fa fa-fw fa-times" style="cursor: pointer;" @onclick="() => Remove(item)"></i>
                </span>
            </div>
        }
    </div>

    @if (Items.Count > 3)
    {
        @if (!ShowAllItems)
        {
            <i class="fas fa-ellipsis-h"></i>
        }
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="showAllRedirectUris" @onclick=@(() => ShowAllItems = !ShowAllItems) checked="@ShowAllItems">
            <label class="form-check-label" for="showAllRedirectUris">Show all created Redirect Uris</label>
        </div>
    }
</div>

@code {
    [Parameter]
    public required ICollection<Uri> Items { get; set; }

    [Parameter]
    public required bool ShowAllItems { get; set; }

    private string? NewValue { get; set; }

    private void AddNewValue()
    {
        if (Uri.TryCreate(NewValue, UriKind.Absolute, out var uri))
        {
            Items.Add(uri);
            NewValue = null;
        }
    }

    private void Remove(Uri item)
    {
        NewValue = item.ToString();
        Items.Remove(item);
    }
}